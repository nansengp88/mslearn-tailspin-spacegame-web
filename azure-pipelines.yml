# ASP.NET Core
# 12/23/2023 initial release
# Version 2 - changed trigger: statement from '*' to build-pipeline
# Version 3 - changed vmImage: ubuntu-lates to Default
#           - also added "Publish the build to the pipeline"
#           - see Exercise - Publish the result to the pipeline Unit 7 of 10
#           - The first task uses the DotNetCoreCLI@2 task to publish or package the app's build results 
#             (including its dependencies) into a folder. The zipAfterPublish argument specifies to add 
#             the built results to a .zip file.
#           - The second task uses the PublishBuildArtifacts@1 task to publish the .zip file to Azure Pipelines. 
#             The condition argument specifies to run the task only when the previous task succeeds. 
#             succeeded() is the default condition, so you don't need to specify it. 
#             But we show it here to show its use.
trigger:
- build-pipeline

pool:
  vmImage: Default

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK 6.x'
  inputs:
    packageType: sdk
    version: '6.x'
  
- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false
  
- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
  displayName: 'Compile Sass assets'
  
- task: gulp@1
  displayName: 'Run gulp tasks'
  
- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot
  
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
  
- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'
##################################################################
# SEE ABOVE Version 3 - changed vmImage: ubuntu-lates to Default #
##################################################################
- task: DotNetCoreCLI@2
  displayName: 'Publish the project - Release'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()